################################################################################
# 3d flow around a cube with read_grid and read_surf
# testing custom attributes
#
# Notes:
#  - The "comm/sort” option to the “global” command is used to match MPI runs.
#  - The “twopass” option is used to match Kokkos runs.
# The "comm/sort" and "twopass" options should not be used for production runs.
################################################################################

seed	    	    12345

#global              gridcut -1.0 comm/sort yes
global              gridcut 0.0 comm/sort yes
#global              gridcut 2.0 comm/sort yes

#global              surfs explicit
global              surfs explicit/distributed

boundary	    or r r

create_box  	    0 10 0 10 0 10

read_grid           data.cube.grid &
                    custom ivec int 0 &
                    custom iarray int 2 &
                    custom dvec float 0 &
                    custom darray float 3

balance_grid        rcb cell

global		    nrho 1.0 fnum 0.1

species		    air.species N O
mixture		    air N O vstream 100.0 0 0 

read_surf	    data.cube.custom &
                    custom ivec int 0 &
                    custom iarray int 2 &
                    custom dvec float 0 &
                    custom darray float 3 &
                    trans 4.5 4.5 -0.5 origin 5 5 0 &
                    scale 3 3 3 rotate 45 1 1 1 clip

surf_collide	    1 diffuse 300.0 0.0
surf_modify         all collide 1

collide             vss air air.vss

fix		    in emit/face air xlo twopass 

timestep 	    0.0001

# output

dump                10 image all 100 tmp.cube.clip.image.*.ppm &
                    type type pdiam 0.1 &
                    surf proc 0.01 size 512 512 axes yes 0.9 0.02 zoom 1.2
dump_modify	    10 pad 4

dump          1 surf all 100 tmp.cube.clip.dump.surf id type &
              s_ivec s_iarray[*] s_dvec s_darray[*]

write_surf      tmp.cube.clip.data.surf type &
                custom ivec custom iarray custom dvec custom darray &
                points no

# first run

fix             1 balance 100 1.01 rcb part flip yes

stats		    50
stats_style	    step cpu np nattempt ncoll nscoll nscheck f_1[*]

run 		    500
