################################################################################
# 2d flow around a staircase of steps with read_grid and read_surf
# testing custom attributes
#
# Notes:
#  - The "comm/sort” option to the “global” command is used to match MPI runs.
#  - The “twopass” option is used to match Kokkos runs.
# The "comm/sort" and "twopass" options should not be used for production runs.
################################################################################

seed	    	    12345
dimension   	    2

#global              gridcut -1.0 comm/sort yes
global              gridcut 0.0 comm/sort yes
#global              gridcut 2.0 comm/sort yes

#global              surfs explicit
global              surfs explicit/distributed

boundary	    or r p

create_box  	    0 10 0 10 -0.5 0.5

create_grid 	    20 20 1 

balance_grid        rcb cell

global		    nrho 1.0 fnum 0.01

species		    air.species N O
mixture		    air N O vstream 100.0 0 0 

read_surf	    data.step &
                    trans 5 5 0 scale 0.75 0.75 1 &
                    rotate 45 0 0 1 invert

surf_collide	    1 diffuse 300.0 0.0
surf_modify         all collide 1

collide             vss air air.vss

# setup up per-surf custom attributes

compute             1 property/surf all id

run                 0

variable            sivec surf c_1*10
variable            siarray1 surf s_ivec+1
variable            siarray2 surf v_siarray1+1
variable            sdvec surf c_1*10+3.5
variable            sdarray1 surf s_dvec+1
variable            sdarray2 surf v_sdarray1+1
variable            sdarray3 surf v_sdarray2+1

custom              surf create ivec int 0 set ivec v_sivec all NULL
custom              surf create iarray int 2 set iarray[1] v_siarray1 all NULL
custom              surf set iarray[2] v_siarray2 all NULL
custom              surf create dvec float 0 set dvec v_sdvec all NULL
custom              surf create darray float 3 set darray[1] v_sdarray1 all NULL
custom              surf set darray[2] v_sdarray2 all NULL
custom              surf set darray[3] v_sdarray3 all NULL

# setup up per-grid custom attributes

compute             2 property/grid all id

run                 0

variable            givec grid c_2*10
variable            giarray1 grid g_ivec+1
variable            giarray2 grid v_giarray1+1
variable            gdvec grid c_2*10+3.5
variable            gdarray1 grid g_dvec+1
variable            gdarray2 grid v_gdarray1+1
variable            gdarray3 grid v_gdarray2+1

custom              grid create ivec int 0 set ivec v_givec all NULL
custom              grid create iarray int 2 set iarray[1] v_giarray1 all NULL
custom              grid set iarray[2] v_giarray2 all NULL
custom              grid create dvec float 0 set dvec v_gdvec all NULL
custom              grid create darray float 3 set darray[1] v_gdarray1 all NULL
custom              grid set darray[2] v_gdarray2 all NULL
custom              grid set darray[3] v_gdarray3 all NULL

# emission fix

fix		    in emit/face air xlo twopass 

timestep 	    0.0001

# output

dump                10 image all 100 tmp.step.set.image.*.ppm &
                    type type pdiam 0.1 &
                    surf proc 0.01 size 512 512 axes yes 0.9 0.02 zoom 1.5
dump_modify	    10 pad 4

dump          1 surf all 100 tmp.step.set.dump.surf id type &
              s_ivec s_iarray[*] s_dvec s_darray[*]

dump          2 grid all 100 tmp.step.set.dump.grid id &
              g_ivec g_iarray[*] g_dvec g_darray[*]

write_surf      tmp.step.set.data.surf type &
                custom ivec custom iarray custom dvec custom darray &
                points no

write_grid      tmp.step.set.data.grid &
                custom ivec custom iarray custom dvec custom darray

# first run

fix             1 balance 100 1.01 rcb part flip yes

stats		    50
stats_style	    step cpu np nattempt ncoll nscoll nscheck f_1[*]

run 		    500

# setup up per-particle custom attributes

variable        pivec particle id/100000
variable        piarray1 particle p_ivec+1
variable        piarray2 particle v_piarray1+1
variable        pdvec particle id/100000+3.5
variable        pdarray1 particle p_dvec+1
variable        pdarray2 particle v_pdarray1+1
variable        pdarray3 particle v_pdarray2+1

custom          particle create ivec int 0 set ivec v_pivec all NULL
custom          particle create iarray int 2 set iarray[1] v_piarray1 all NULL
custom          particle set iarray[2] v_piarray2 all NULL
custom          particle create dvec float 0 set dvec v_pdvec all NULL
custom          particle create darray float 3 set darray[1] v_pdarray1 all NULL
custom          particle set darray[2] v_pdarray2 all NULL
custom          particle set darray[3] v_pdarray3 all NULL

dump          3 particle all 100 tmp.step.set.dump.particle id x y &
              p_ivec p_iarray[*] p_dvec p_darray[*]

# second run

balance_grid    rcb part flip yes

compute       3 reduce ave p_ivec p_iarray[*] p_dvec p_darray[*]
compute       4 reduce ave g_ivec g_iarray[*] g_dvec g_darray[*]
compute       5 reduce ave s_ivec s_iarray[*] s_dvec s_darray[*]

stats		50
stats_style	step cpu np nattempt ncoll nscoll nscheck f_1[*] &
                c_3[*] c_4[*] c_5[*]

run 		    500

write_surf      tmp.step.set.data.surf2 type &
                custom ivec custom iarray custom dvec custom darray &
                points no

write_grid      tmp.step.set.data.grid2 &
                custom ivec custom iarray custom dvec custom darray

#write_restart   tmp.step.read.restart
write_restart   tmp.step.read.restart.% fileper 2

# remove all custom attributes

undump         1
undump         2
undump         3

custom         surf remove ivec
custom         surf remove iarray
custom         surf remove dvec
custom         surf remove darray

custom         grid remove ivec
custom         grid remove iarray
custom         grid remove dvec
custom         grid remove darray

custom         particle remove ivec
custom         particle remove iarray
custom         particle remove dvec
custom         particle remove darray

# third run

uncompute       3
uncompute       4
uncompute       5
stats_style	step cpu np nattempt ncoll nscoll nscheck f_1[*]

run            500
